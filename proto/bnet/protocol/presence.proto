syntax = "proto2";
package bnet.protocol.presence;
import "bnet/protocol/attribute.proto";
import "bnet/protocol_0.proto";
import "bnet/protocol/channel.proto";


message FieldKey {
	optional uint32 program = 1;
	optional uint32 group = 2;
	optional uint32 field = 3;
	optional uint64 index = 4;
}

message Field {
	optional .bnet.protocol.presence.FieldKey key = 1;
	optional .bnet.protocol.attribute.Variant value = 2;
}

message FieldOperation {
	enum OperationType {
		SET = 0;
		CLEAR = 1;
	}
	optional .bnet.protocol.presence.Field field = 1;
	optional .bnet.protocol.presence.FieldOperation.OperationType operation = 2;
}

message ChannelState {
	optional .bnet.protocol.EntityId entity_id = 1;
	repeated .bnet.protocol.presence.FieldOperation field_operation = 2;
	optional bool healing = 3;
	extend .bnet.protocol.channel.ChannelState {
		optional bnet.protocol.presence.ChannelState presence = 101;
	}
}

message OwnershipRequest {
	optional .bnet.protocol.EntityId entity_id = 1;
	optional bool release_ownership = 2;
}

message QueryRequest {
	optional .bnet.protocol.EntityId entity_id = 1;
	repeated .bnet.protocol.presence.FieldKey key = 2;
}

message QueryResponse {
	repeated .bnet.protocol.presence.Field field = 2;
}

message RichPresence {
	optional fixed32 program_id = 1;
	optional fixed32 stream_id = 2;
	optional uint32 index = 3;
}

message SubscribeNotificationRequest {
	optional .bnet.protocol.EntityId entity_id = 1;
}

message SubscribeRequest {
	optional .bnet.protocol.EntityId agent_id = 1;
	optional .bnet.protocol.EntityId entity_id = 2;
	optional uint64 object_id = 3;
	repeated fixed32 program_id = 4;
}

message UnsubscribeRequest {
	optional .bnet.protocol.EntityId agent_id = 1;
	optional .bnet.protocol.EntityId entity_id = 2;
}

message UpdateRequest {
	optional .bnet.protocol.EntityId entity_id = 1;
	repeated .bnet.protocol.presence.FieldOperation field_operation = 2;
}

