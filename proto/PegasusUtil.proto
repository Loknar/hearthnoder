syntax = "proto2";
package PegasusUtil;
import "PegasusShared.proto";


message AccountLicenseAchieveResponse {
	enum PacketID {
		ID = 311;
	}
	enum Result {
		INVALID_ACHIEVE = 1;
		NOT_ACTIVE = 2;
		IN_PROGRESS = 3;
		COMPLETE = 4;
		STATUS_UNKNOWN = 5;
	}
	optional int32 achieve = 1;
	optional .PegasusUtil.AccountLicenseAchieveResponse.Result result = 2 [default = INVALID_ACHIEVE];
}

message Achieve {
	optional int32 id = 1;
	optional int32 progress = 2;
	optional int32 ack_progress = 3;
	optional int32 completion_count = 4;
	optional bool active = 5;
	optional int32 started_count = 6;
	optional .PegasusShared.Date date_given = 7;
	optional .PegasusShared.Date date_completed = 8;
	optional bool do_not_ack = 9;
}

message AchieveInfo {
	optional string desc = 1;
	optional int32 type = 2;
	optional int32 quota = 3;
	optional int32 reward = 4;
	optional int64 data1 = 5;
	optional int64 data2 = 6;
}

message Achieves {
	enum PacketID {
		ID = 252;
	}
	repeated .PegasusUtil.Achieve list = 1;
}

message AckAchieveProgress {
	enum PacketID {
		ID = 243;
		System = 0;
	}
	optional int32 id = 1;
	optional int32 ack_progress = 2;
}

message AckCardSeen {
	enum PacketID {
		ID = 223;
		System = 0;
	}
	repeated .PegasusShared.CardDef card_defs = 1;
}

message AckNotice {
	enum PacketID {
		ID = 213;
		System = 0;
	}
	optional int64 entry = 1;
}

message AcknowledgeBanner {
	enum PacketID {
		ID = 309;
		System = 0;
	}
	optional int32 banner = 1;
}

message AckWingProgress {
	enum PacketID {
		ID = 308;
		System = 0;
	}
	optional int32 wing = 1;
	optional int32 ack = 2;
}

message AdventureOptions {
	optional int32 adventure_id = 1;
	optional uint64 options = 2;
}

message AdventureProgressResponse {
	enum PacketID {
		ID = 306;
	}
	repeated .PegasusShared.AdventureProgress list = 1;
}

message ArcaneDustBalance {
	enum PacketID {
		ID = 262;
	}
	optional int64 balance = 1;
}

message AssetsVersionResponse {
	enum PacketID {
		ID = 304;
	}
	optional int32 version = 1;
}

message AtlasAchieve {
	optional int32 id = 1;
	optional int32 progress = 2;
	optional bool is_complete = 3;
	optional int32 ack_value = 4;
	optional .PegasusShared.Date date_completed = 5;
	optional int32 completion_count = 6;
	optional bool active = 7;
}

message AtlasAchieveInfo {
	enum PacketID {
		ID = 108;
	}
	repeated .PegasusUtil.AchieveInfo info = 1;
}

message AtlasAchieves {
	enum PacketID {
		ID = 107;
	}
	repeated .PegasusUtil.AtlasAchieve info = 1;
}

message AtlasAddBooster {
	enum PacketID {
		ID = 413;
	}
	optional uint64 account_id = 1;
	optional int32 type = 2;
}

message AtlasAddCard {
	enum PacketID {
		ID = 405;
	}
	optional uint64 account_id = 1;
	optional .PegasusShared.CardDef card_def = 2;
	optional bool is_seen = 3;
}

message AtlasAddCardBack {
	enum PacketID {
		ID = 422;
	}
	optional uint64 account_id = 1;
	optional int32 card_back = 2;
}

message AtlasAddDraft {
	enum PacketID {
		ID = 416;
	}
	optional uint64 account_id = 1;
}

message AtlasBoosterHistory {
	optional int32 action = 1;
	optional .PegasusShared.Date when = 2;
}

message AtlasBooster {
	optional uint64 booster_id = 1;
	optional bool is_open = 2;
	optional int32 type = 3;
	optional uint64 license = 4;
	repeated .PegasusUtil.AtlasBoosterHistory history = 5;
}

message AtlasBoosters {
	enum PacketID {
		ID = 109;
	}
	repeated .PegasusUtil.AtlasBooster info = 1;
}

message AtlasCardBackHistory {
	optional int32 card_back = 1;
	optional int32 action = 2;
	optional .PegasusShared.Date when = 3;
	optional int64 data1 = 4;
	optional int64 data2 = 5;
}

message AtlasCardBacks {
	enum PacketID {
		ID = 112;
	}
	repeated int32 card_backs = 1;
	repeated .PegasusUtil.AtlasCardBackHistory history = 2;
}

message AtlasCardHistory {
	optional uint32 action = 1;
	optional .PegasusShared.Date action_date = 2;
	optional uint64 data = 3;
}

message AtlasCardDetail {
	optional uint64 card_id = 1;
	optional uint32 deleted = 2;
	optional bool is_seen = 3;
	optional .PegasusShared.Date insert_date = 4;
	repeated .PegasusUtil.AtlasCardHistory history = 5;
}

message AtlasCardDetails {
	enum PacketID {
		ID = 103;
	}
	repeated .PegasusUtil.AtlasCardDetail details = 1;
}

message AtlasChangeArcaneDust {
	enum PacketID {
		ID = 407;
	}
	optional uint64 account_id = 1;
	optional int64 delta = 2;
}

message AtlasChangeBonusGold {
	enum PacketID {
		ID = 420;
	}
	optional uint64 account_id = 1;
	optional int64 delta = 2;
}

message AtlasChangeGold {
	enum PacketID {
		ID = 418;
	}
	optional uint64 account_id = 1;
	optional int64 delta = 2;
}

message AtlasCollection {
	enum PacketID {
		ID = 102;
	}
	repeated .PegasusShared.CardStack stacks = 1;
}

message AtlasCurrencyHistory {
	optional int32 currency = 1;
	optional int64 amount = 2;
	optional int32 action = 3;
	optional .PegasusShared.Date when = 4;
	optional int64 data1 = 5;
}

message AtlasCurrencyDetails {
	enum PacketID {
		ID = 111;
	}
	repeated .PegasusUtil.AtlasCurrencyHistory history = 1;
}

message AtlasCurrentDraft {
	optional uint64 deck_id = 1;
	optional int32 slot = 2;
	optional int32 wins = 3;
	optional int32 losses = 4;
}

message AtlasDeckCard {
	optional .PegasusShared.CardDef def = 1;
	optional int32 qty = 2;
}

message AtlasDeck {
	optional .PegasusShared.DeckInfo header = 1;
	repeated .PegasusUtil.AtlasDeckCard cards = 2;
}

message AtlasDecks {
	enum PacketID {
		ID = 104;
	}
	repeated .PegasusUtil.AtlasDeck decks = 1;
}

message AtlasDraftHistory {
	optional uint64 deck_id = 1;
	optional int32 action = 2;
	optional .PegasusShared.Date when = 3;
	optional int64 data1 = 4;
	optional int64 data2 = 5;
	optional int64 data3 = 6;
	optional int64 data4 = 7;
}

message AtlasDraftTicketHistory {
	optional int32 action = 1;
	optional .PegasusShared.Date when = 2;
}

message AtlasDraftTicket {
	optional uint64 ticket_id = 1;
	optional bool was_used = 2;
	optional string license = 3;
	repeated .PegasusUtil.AtlasDraftTicketHistory history = 4;
}

message AtlasDrafts {
	enum PacketID {
		ID = 110;
	}
	repeated .PegasusUtil.AtlasDraftTicket tickets = 1;
	optional .PegasusUtil.AtlasCurrentDraft current_draft = 2;
	repeated .PegasusUtil.AtlasDraftHistory history = 3;
}

message AtlasError {
	enum ErrorType {
		BNET_ERROR = 1;
		PEGASUS_ERROR = 2;
	}
	enum PacketID {
		ID = 101;
	}
	optional .PegasusUtil.AtlasError.ErrorType type = 1 [default = BNET_ERROR];
	optional int32 error = 2;
}

message AtlasGetAchieveInfo {
	enum PacketID {
		ID = 411;
	}
	optional uint64 account_id = 1;
	optional uint64 achieve_id = 2;
}

message AtlasGetAchieves {
	enum PacketID {
		ID = 410;
	}
	optional uint64 account_id = 1;
}

message AtlasGetAdventureProgress {
	enum PacketID {
		ID = 426;
	}
	optional uint64 account_id = 1;
}

message AtlasGetBoosters {
	enum PacketID {
		ID = 412;
	}
	optional uint64 account_id = 1;
	optional .PegasusShared.Date start_date = 2;
	optional .PegasusShared.Date end_date = 3;
}

message AtlasGetCardBacks {
	enum PacketID {
		ID = 421;
	}
	optional uint64 account_id = 1;
	optional .PegasusShared.Date start_date = 2;
	optional .PegasusShared.Date end_date = 3;
}

message AtlasGetCardDetails {
	enum PacketID {
		ID = 403;
	}
	optional uint64 account_id = 1;
	optional .PegasusShared.CardDef card_def = 2;
	optional .PegasusShared.Date start_date = 3;
	optional .PegasusShared.Date end_date = 4;
}

message AtlasGetCollection {
	enum PacketID {
		ID = 402;
	}
	optional uint64 account_id = 1;
}

message AtlasGetCurrencyDetails {
	enum PacketID {
		ID = 419;
	}
	optional uint64 account_id = 1;
	optional .PegasusShared.Date start_date = 2;
	optional .PegasusShared.Date end_date = 3;
}

message AtlasGetDecks {
	enum PacketID {
		ID = 404;
	}
	optional uint64 account_id = 1;
}

message AtlasGetDrafts {
	enum PacketID {
		ID = 415;
	}
	optional uint64 account_id = 1;
	optional .PegasusShared.Date start_date = 2;
	optional .PegasusShared.Date end_date = 3;
}

message AtlasGetOrders {
	enum PacketID {
		ID = 409;
	}
	optional uint64 account_id = 1;
}

message AtlasGetPlayerInfo {
	enum PacketID {
		ID = 401;
	}
	optional uint64 account_id = 1;
}

message AtlasOrder {
	optional int64 id = 1;
	optional int32 type = 2;
	optional int32 status = 3;
	optional int64 data = 4;
	optional int64 first_data = 5;
	optional string order = 6;
	optional int64 wallet = 7;
	optional string err_str = 8;
	optional string ip_address = 9;
	optional string challenge_id = 10;
	optional .PegasusShared.BattlePayProvider provider = 11 [default = BP_PROVIDER_BLIZZARD];
	optional string third_party_id = 12;
	optional string product_id = 13;
	optional .PegasusShared.Date insert_date = 14;
	optional .PegasusShared.Date last_update = 15;
	optional string third_party_user_id = 16;
}

message AtlasOrders {
	enum PacketID {
		ID = 106;
	}
	repeated .PegasusUtil.AtlasOrder orders = 1;
}

message AtlasReleaseMobilePurchaseLock {
	enum PacketID {
		ID = 425;
	}
	optional uint64 account_id = 1;
}

message AtlasRemoveBooster {
	enum PacketID {
		ID = 414;
	}
	optional uint64 account_id = 1;
	optional uint64 booster_id = 2;
}

message AtlasRemoveCard {
	enum PacketID {
		ID = 406;
	}
	optional uint64 account_id = 1;
	optional uint64 card_id = 2;
}

message AtlasRemoveCardBack {
	enum PacketID {
		ID = 423;
	}
	optional uint64 account_id = 1;
	optional int32 card_back = 2;
}

message AtlasRemoveDraft {
	enum PacketID {
		ID = 417;
	}
	optional uint64 account_id = 1;
	optional uint64 ticket_id = 2;
}

message AtlasRestoreCard {
	enum PacketID {
		ID = 408;
	}
	optional uint64 account_id = 1;
	optional uint64 card_id = 2;
}

message AtlasSetAdventureProgress {
	enum PacketID {
		ID = 427;
	}
	optional uint64 account_id = 1;
	optional int32 wing_id = 2;
	optional int32 progress = 3;
	optional uint64 add_wing_flags = 4;
	optional uint64 remove_wing_flags = 5;
	optional int32 progress_ack = 6;
}

message AtlasSuccess {
	enum PacketID {
		ID = 105;
	}
}

message AtlasWingProgress {
	optional .PegasusShared.AdventureProgress progress = 1;
	optional .PegasusShared.Date last_update = 2;
}

message AtlasAdventureProgress {
	enum PacketID {
		ID = 113;
	}
	repeated .PegasusUtil.AtlasWingProgress list = 1;
}

message BoosterCard {
	optional .PegasusShared.CardDef card_def = 1;
	optional .PegasusShared.Date insert_date = 2;
}

message BoosterContent {
	enum PacketID {
		ID = 226;
	}
	repeated .PegasusUtil.BoosterCard list = 1;
}

message BoosterInfo {
	optional int32 type = 2;
	optional int32 count = 3;
}

message AtlasPlayer {
	enum PacketID {
		ID = 100;
	}
	optional int64 player_id = 1;
	optional int32 games_started = 2;
	optional int32 games_completed = 3;
	optional int32 games_won = 4;
	optional int32 games_lost = 5;
	optional int32 deleted_reason = 6;
	optional int32 deck_limit = 7;
	optional int64 campaign_progress = 8;
	optional int64 random_deck_id = 9;
	optional int64 arcane_dust = 10;
	optional int64 last_game_id = 11;
	optional int32 craft_asset_id = 12;
	optional int32 craft_premium = 13;
	optional int32 craft_count = 14;
	optional int64 battlepay_id = 15;
	repeated .PegasusUtil.BoosterInfo booster_list = 16;
	optional int64 gold = 17;
	optional int64 bonus_gold = 18;
	optional int32 default_card_back = 19;
}

message BoosterList {
	enum PacketID {
		ID = 224;
	}
	repeated .PegasusUtil.BoosterInfo list = 1;
}

message BoosterTally {
	optional bool is_open = 1;
	optional int32 type_id = 2;
	optional bool is_bought = 3;
	optional int32 source_id = 4;
	optional int32 count = 5;
}

message BoosterTallyList {
	enum PacketID {
		ID = 313;
	}
	repeated .PegasusUtil.BoosterTally list = 1;
}

message BoughtSoldCard {
	enum PacketID {
		ID = 258;
	}
	enum Result {
		FAILED = 1;
		SOLD = 2;
		BOUGHT = 3;
		SOULBOUND = 4;
		WRONG_SELL_PRICE = 5;
		WRONG_BUY_PRICE = 6;
		MISSING_ACHIEVE = 7;
	}
	optional .PegasusShared.CardDef def = 1;
	optional int32 amount = 2;
	optional .PegasusUtil.BoughtSoldCard.Result result = 3 [default = FAILED];
	optional int32 count = 4;
	optional bool nerfed = 5;
	optional int32 unit_sell_price = 6;
	optional int32 unit_buy_price = 7;
}

message BundleItem {
	optional int32 product_type = 1;
	optional int32 data = 2;
	optional int32 quantity = 3;
}

message Bundle {
	optional string id = 1;
	optional double cost = 2;
	optional string apple_id = 3;
	optional string google_play_id = 4;
	repeated .PegasusUtil.BundleItem items = 5;
	optional int64 gold_cost = 6;
	optional string amazon_id = 7;
	optional string product_event_name = 9;
}

message BuySellCard {
	enum PacketID {
		ID = 257;
		System = 0;
	}
	optional .PegasusShared.CardDef def = 1;
	optional int32 count = 2;
	optional bool buying = 3;
	optional int32 unit_sell_price = 4;
	optional int32 unit_buy_price = 5;
}

message CancelPurchase {
	enum PacketID {
		ID = 274;
		System = 1;
	}
	enum ThirdPartyCancelReason {
		PROVIDER_REPORTED_FAILURE = 1;
		NOT_RECOGNIZED_BY_PROVIDER = 2;
		USER_CANCELED_BEFORE_PAYMENT = 3;
		USER_CANCELING_TO_UNBLOCK = 4;
	}
	optional bool is_auto_cancel = 1;
	optional .PegasusUtil.CancelPurchase.ThirdPartyCancelReason third_party_reason = 2 [default = PROVIDER_REPORTED_FAILURE];
}

message CancelPurchaseResponse {
	enum CancelResult {
		CR_SUCCESS = 1;
		CR_NOT_ALLOWED = 2;
		CR_NOTHING_TO_CANCEL = 3;
	}
	enum PacketID {
		ID = 275;
	}
	optional .PegasusUtil.CancelPurchaseResponse.CancelResult result = 1 [default = CR_SUCCESS];
	optional int64 transaction_id = 2;
	optional string product_id = 3;
	optional int32 currency = 4;
}

message CancelQuest {
	enum PacketID {
		ID = 281;
		System = 0;
	}
	optional int32 quest_id = 1;
}

message CancelQuestResponse {
	enum PacketID {
		ID = 282;
	}
	optional int32 quest_id = 1;
	optional bool success = 2;
	optional .PegasusShared.Date next_quest_cancel = 3;
}

message CardBacks {
	enum PacketID {
		ID = 236;
		System = 0;
	}
	optional int32 default_card_back = 1;
	repeated int32 card_backs = 2;
}

message CardUseCount {
	optional int32 asset = 1;
	optional int32 count = 2;
}

message CardValue {
	optional .PegasusShared.CardDef card = 1;
	optional int32 buy = 2;
	optional int32 sell = 3;
	optional bool nerfed = 4;
}

message CardValues {
	enum PacketID {
		ID = 260;
	}
	repeated .PegasusUtil.CardValue cards = 1;
	optional int32 card_nerf_index = 2;
}

message CheckAccountLicenseAchieve {
	enum PacketID {
		ID = 297;
		System = 1;
	}
	optional int32 achieve = 1;
}

message CheckAccountLicenses {
	enum PacketID {
		ID = 267;
		System = 0;
	}
}

message CheckGameLicenses {
	enum PacketID {
		ID = 276;
		System = 1;
	}
}

message CheckLicensesResponse {
	enum PacketID {
		ID = 277;
	}
	optional bool account_level = 1;
	optional bool success = 2;
}

message ClientOption {
	optional int32 index = 1;
	optional bool as_bool = 2;
	optional int32 as_int32 = 3;
	optional int64 as_int64 = 4;
	optional float as_float = 5;
	optional uint64 as_uint64 = 6;
}

message ClientOptions {
	enum PacketID {
		ID = 241;
	}
	repeated .PegasusUtil.ClientOption options = 1;
	optional bool failed = 2;
}

message CloseCardMarket {
	enum PacketID {
		ID = 263;
		System = 0;
	}
}

message Collection {
	enum PacketID {
		ID = 207;
	}
	repeated .PegasusShared.CardStack stacks = 1;
}

message CreateDeck {
	enum PacketID {
		ID = 209;
		System = 0;
	}
	optional string name = 1;
	optional int32 hero = 2;
	optional int32 hero_premium = 3;
}

message DBAction {
	enum PacketID {
		ID = 216;
	}
	optional .PegasusShared.DatabaseAction action = 1;
	optional .PegasusShared.DatabaseResult result = 2 [default = DB_E_SQL_EX];
	optional int64 meta_data = 3;
}

message DebugAuth {
	enum PacketID {
		ID = 206;
	}
	enum Result {
		UNKNOWN = 0;
		VALID = 1;
		BAD_USER = 2;
		BAD_PASSWORD = 3;
	}
	optional .PegasusUtil.DebugAuth.Result result = 1;
	optional int64 player_id = 2;
}

message DeckContents {
	enum PacketID {
		ID = 215;
	}
	optional int64 deck = 1;
	repeated .PegasusShared.DeckCardData cards = 2;
}

message DeckCreated {
	enum PacketID {
		ID = 217;
	}
	optional .PegasusShared.DeckInfo info = 1;
}

message DeckDeleted {
	enum PacketID {
		ID = 218;
	}
	optional int64 deck = 1;
}

message DeckGainedCard {
	enum PacketID {
		ID = 220;
	}
	optional int64 deck = 1;
	optional int64 card = 2;
}

message DeckList {
	enum PacketID {
		ID = 202;
	}
	repeated .PegasusShared.DeckInfo decks = 1;
}

message DeckLostCard {
	enum PacketID {
		ID = 221;
	}
	optional int64 deck = 1;
	optional int64 card = 2;
}

message DeckRenamed {
	enum PacketID {
		ID = 219;
	}
	optional int64 deck = 1;
	optional string name = 2;
}

message DeckSetData {
	enum PacketID {
		ID = 222;
		System = 0;
	}
	optional int64 deck = 1;
	repeated .PegasusShared.DeckCardData cards = 2;
}

message DeleteDeck {
	enum PacketID {
		ID = 210;
		System = 0;
	}
	optional int64 deck = 1;
}

message DevBnetIdentify {
	enum PacketID {
		ID = 259;
		System = 0;
	}
	optional string name = 1;
}

message Disconnected {
	enum PacketID {
		ID = 289;
	}
	optional string address = 1;
	optional int32 game_handle = 2;
	optional int64 client_handle = 3;
	optional int32 port = 4;
	optional string version = 5;
	optional string aurora_password = 6;
	optional int32 scenario = 7;
}

message DoPurchase {
	enum PacketID {
		ID = 273;
		System = 1;
	}
}

message DraftAckRewards {
	enum PacketID {
		ID = 287;
		System = 0;
	}
	optional int64 deck_id = 1;
	optional int32 slot = 2;
}

message DraftBegin {
	enum PacketID {
		ID = 235;
		System = 0;
	}
}

message DraftBeginning {
	enum PacketID {
		ID = 246;
	}
	optional int64 deck_id = 1;
	repeated int32 choices = 2;
}

message DraftChosen {
	enum PacketID {
		ID = 249;
	}
	optional int32 asset = 1;
	repeated int32 next_choices = 2;
}

message DraftError {
	enum ErrorCode {
		DE_UNKNOWN = 0;
		DE_NO_LICENSE = 1;
		DE_RETIRE_FIRST = 2;
		DE_NOT_IN_DRAFT = 3;
		DE_BAD_DECK = 4;
		DE_BAD_SLOT = 5;
		DE_BAD_INDEX = 6;
		DE_NOT_IN_DRAFT_BUT_COULD_BE = 7;
		DE_FEATURE_DISABLED = 8;
	}
	enum PacketID {
		ID = 251;
	}
	optional .PegasusUtil.DraftError.ErrorCode error_code = 1;
}

message DraftGetPicksAndContents {
	enum PacketID {
		ID = 244;
		System = 0;
	}
}

message DraftMakePick {
	enum PacketID {
		ID = 245;
		System = 0;
	}
	optional int64 deck_id = 1;
	optional int32 slot = 2;
	optional int32 index = 3;
}

message DraftRetire {
	enum PacketID {
		ID = 242;
		System = 0;
	}
	optional int64 deck_id = 1;
	optional int32 slot = 2;
}

message DraftRewardBag {
	optional .PegasusShared.ProfileNoticeRewardBooster reward_booster = 1;
	optional .PegasusShared.ProfileNoticeRewardCard reward_card = 2;
	optional .PegasusShared.ProfileNoticeRewardDust reward_dust = 3;
	optional .PegasusShared.ProfileNoticeRewardGold reward_gold = 4;
}

message DraftRewardChest {
	optional .PegasusUtil.DraftRewardBag bag1 = 1;
	optional .PegasusUtil.DraftRewardBag bag2 = 2;
	optional .PegasusUtil.DraftRewardBag bag3 = 3;
	optional .PegasusUtil.DraftRewardBag bag4 = 4;
	optional .PegasusUtil.DraftRewardBag bag5 = 5;
}

message DraftChoicesAndContents {
	enum PacketID {
		ID = 248;
	}
	optional int64 deck_id = 1;
	optional int32 slot = 2;
	repeated int32 choices = 3;
	optional int32 hero = 4;
	repeated .PegasusShared.DeckCardData cards = 5;
	optional int32 wins = 6;
	optional int32 losses = 7;
	optional .PegasusUtil.DraftRewardChest chest = 8;
}

message DraftRetired {
	enum PacketID {
		ID = 247;
	}
	optional int64 deck_id = 1;
	optional .PegasusUtil.DraftRewardChest chest = 2;
}

message DraftRewardsAcked {
	enum PacketID {
		ID = 288;
	}
	optional int64 deck_id = 1;
}

message DroppedRequest {
	enum PacketID {
		ID = 0;
	}
}

message Error37 {
	enum PacketID {
		ID = 266;
	}
	enum ThrottleReason {
		TR_DB_LOAD = 0;
	}
	optional .PegasusUtil.Error37.ThrottleReason reason = 1;
	optional int64 retry_millis = 2;
}

message GamesInfo {
	enum PacketID {
		ID = 208;
	}
	optional int32 games_started = 1;
	optional int32 games_won = 2;
	optional int32 games_lost = 3;
	optional int32 free_reward_progress = 4;
}

message GetAccountInfo {
	enum PacketID {
		ID = 201;
		System = 0;
	}
	enum Request {
		LAST_LOGIN = 1;
		DECK_LIST = 2;
		COLLECTION = 3;
		MEDAL_INFO = 4;
		MEDAL_HISTORY = 5;
		BOOSTERS = 6;
		CARD_BACKS = 7;
		PLAYER_RECORD = 8;
		GAMES_PLAYED = 9;
		DECK_LIMIT = 10;
		CAMPAIGN_INFO = 11;
		NOTICES = 12;
		MOTD = 13;
		CLIENT_OPTIONS = 14;
		CARD_VALUES = 15;
		DISCONNECTED = 16;
		ARCANE_DUST_BALANCE = 17;
		FEATURES = 18;
		REWARD_PROGRESS = 19;
		GOLD_BALANCE = 20;
		HERO_XP = 21;
		PVP_QUEUE = 22;
		MASSIVE_LOGIN = 23;
		BOOSTER_TALLY = 24;
	}
	optional .PegasusUtil.GetAccountInfo.Request request = 1 [default = LAST_LOGIN];
}

message GetAchieves {
	enum PacketID {
		ID = 253;
		System = 0;
	}
	optional bool only_active_or_new_complete = 1;
}

message GetAdventureProgress {
	enum PacketID {
		ID = 305;
		System = 0;
	}
}

message GetAssetsVersion {
	enum PacketID {
		ID = 303;
		System = 0;
	}
}

message GetBattlePayConfig {
	enum PacketID {
		ID = 237;
		System = 1;
	}
}

message GetBattlePayStatus {
	enum PacketID {
		ID = 255;
		System = 1;
	}
}

message GetDeck {
	enum PacketID {
		ID = 214;
		System = 0;
	}
	optional int64 deck = 1;
}

message GetOptions {
	enum PacketID {
		ID = 240;
		System = 0;
	}
	repeated int32 keys = 1;
}

message GetPurchaseMethod {
	enum PacketID {
		ID = 250;
		System = 1;
	}
	optional string product_id = 1;
	optional int32 quantity = 2;
	optional int32 currency = 3;
}

message GetThirdPartyPurchaseStatus {
	enum PacketID {
		ID = 294;
		System = 1;
	}
	optional string third_party_id = 1;
}

message GoldBalance {
	enum PacketID {
		ID = 278;
	}
	optional int64 capped_balance = 1;
	optional int64 bonus_balance = 2;
	optional int64 cap = 3;
	optional int64 cap_warning = 4;
}

message GoldCostBooster {
	optional int64 cost = 1;
	optional int32 pack_type = 2;
}

message BattlePayConfigResponse {
	enum PacketID {
		ID = 238;
	}
	repeated .PegasusUtil.Bundle bundles = 1;
	optional int32 currency = 2;
	optional bool unavailable = 4;
	optional int32 secs_before_auto_cancel = 5;
	repeated .PegasusUtil.GoldCostBooster gold_cost_boosters = 6;
	optional int64 gold_cost_arena = 7;
}

message GuardianTrack {
	enum PacketID {
		ID = 261;
		System = 0;
	}
	optional int32 what = 1;
}

message GuardianVars {
	enum PacketID {
		ID = 264;
	}
	optional bool tourney = 1;
	optional bool practice = 2;
	optional bool casual = 3;
	optional bool forge = 4;
	optional bool friendly = 5;
	optional bool manager = 6;
	optional bool crafting = 7;
	optional bool hunter = 8;
	optional bool mage = 9;
	optional bool paladin = 10;
	optional bool priest = 11;
	optional bool rogue = 12;
	optional bool shaman = 13;
	optional bool warlock = 14;
	optional bool warrior = 15;
	optional int32 showUserUI = 16;
	optional bool store = 17;
	optional bool battle_pay = 18;
	optional bool buy_with_gold = 19;
}

message MassDisenchantRequest {
	enum PacketID {
		ID = 268;
		System = 0;
	}
}

message MassDisenchantResponse {
	enum PacketID {
		ID = 269;
	}
	optional int32 amount = 1;
}

message MedalHistoryInfo {
	optional int32 season = 1;
	optional .PegasusShared.Date when = 2;
	optional int32 stars = 3;
	optional int32 star_level = 4;
	optional int32 level_start = 5;
	optional int32 level_end = 6;
	optional int32 legend_rank = 7;
}

message MedalHistory {
	enum PacketID {
		ID = 234;
	}
	repeated .PegasusUtil.MedalHistoryInfo medals = 1;
}

message MedalInfo {
	enum PacketID {
		ID = 232;
	}
	optional int32 season_wins = 3;
	optional int32 stars = 6;
	optional int32 streak = 7;
	optional int32 star_level = 8;
	optional int32 level_start = 9;
	optional int32 level_end = 10;
	optional bool can_lose = 11;
	optional int32 legend_rank = 13;
}

message NearbyPlayer {
	optional uint64 bnet_id_hi = 1;
	optional uint64 bnet_id_lo = 2;
	optional uint64 session_start_time = 3;
}

message NextHeroLevelReward {
	optional int32 level = 1;
	optional .PegasusShared.ProfileNoticeRewardBooster reward_booster = 2;
	optional .PegasusShared.ProfileNoticeRewardCard reward_card = 3;
	optional .PegasusShared.ProfileNoticeRewardDust reward_dust = 4;
	optional .PegasusShared.ProfileNoticeRewardGold reward_gold = 5;
	optional .PegasusShared.ProfileNoticeRewardMount reward_mount = 6;
	optional .PegasusShared.ProfileNoticeRewardForge reward_forge = 7;
}

message HeroXPInfo {
	optional int32 class_id = 1;
	optional int32 level = 2;
	optional int64 curr_xp = 3;
	optional int64 max_xp = 4;
	optional .PegasusUtil.NextHeroLevelReward next_reward = 5;
}

message HeroXP {
	enum PacketID {
		ID = 283;
	}
	repeated .PegasusUtil.HeroXPInfo xp_infos = 1;
}

message NOP {
	enum PacketID {
		ID = 254;
	}
}

message OneClientTracking {
	enum Level {
		L_INFO = 1;
		L_WARNING = 2;
		L_ERROR = 3;
	}
	optional .PegasusUtil.OneClientTracking.Level level = 1 [default = L_INFO];
	optional int32 what = 2;
	optional string message = 3;
	optional uint64 timestamp = 4;
}

message ClientTracking {
	enum PacketID {
		ID = 228;
		System = 0;
	}
	repeated .PegasusUtil.OneClientTracking info = 4;
}

message OpenBooster {
	enum PacketID {
		ID = 225;
		System = 0;
	}
	optional int32 booster_type = 2;
}

message PlayerRecord {
	optional int32 type = 1;
	optional int32 data = 2;
	optional int32 wins = 3;
	optional int32 losses = 4;
	optional int32 ties = 5;
}

message PlayerRecords {
	enum PacketID {
		ID = 270;
	}
	repeated .PegasusUtil.PlayerRecord records = 1;
}

message PlayQueue {
	enum PacketID {
		ID = 286;
	}
	optional .PegasusShared.PlayQueueInfo queue = 1;
}

message ProfileDeckLimit {
	enum PacketID {
		ID = 231;
	}
	optional int32 deck_limit = 1;
}

message ProfileLastLogin {
	enum PacketID {
		ID = 227;
	}
	optional .PegasusShared.Date last_login = 1;
}

message ProfileNotice {
	optional int64 entry = 1;
	optional .PegasusShared.ProfileNoticeMedal medal = 2;
	optional .PegasusShared.ProfileNoticeRewardBooster reward_booster = 3;
	optional .PegasusShared.ProfileNoticeRewardCard reward_card = 4;
	optional .PegasusShared.ProfileNoticePreconDeck precon_deck = 6;
	optional .PegasusShared.ProfileNoticeRewardDust reward_dust = 7;
	optional .PegasusShared.ProfileNoticeRewardGold reward_gold = 8;
	optional .PegasusShared.ProfileNoticeRewardMount reward_mount = 9;
	optional .PegasusShared.ProfileNoticeRewardForge reward_forge = 10;
	optional int32 origin = 11;
	optional int64 origin_data = 12;
	optional .PegasusShared.Date when = 13;
	optional .PegasusShared.ProfileNoticePurchase purchase = 14;
	optional .PegasusShared.ProfileNoticeCardBack reward_card_back = 15;
	optional .PegasusShared.ProfileNoticeDisconnectedGameResult dc_game_result = 16;
	optional .PegasusShared.ProfileNoticeBonusStars bonus_stars = 17;
	optional .PegasusShared.ProfileNoticeAdventureProgress adventure_progress = 18;
}

message ProfileNotices {
	enum PacketID {
		ID = 212;
	}
	repeated .PegasusUtil.ProfileNotice list = 1;
}

message ProfileProgress {
	enum PacketID {
		ID = 233;
	}
	optional int64 progress = 1;
	optional int32 best_forge = 2;
	optional .PegasusShared.Date last_forge = 3;
	optional int32 display_banner = 4;
	repeated .PegasusUtil.AdventureOptions adventure_options = 5;
}

message PurchaseError {
	enum Error {
		E_UNKNOWN = -1;
		E_SUCCESS = 0;
		E_STILL_IN_PROGRESS = 1;
		E_INVALID_BNET = 2;
		E_SERVICE_NA = 3;
		E_PURCHASE_IN_PROGRESS = 4;
		E_DATABASE = 5;
		E_INVALID_QUANTITY = 6;
		E_DUPLICATE_LICENSE = 7;
		E_REQUEST_NOT_SENT = 8;
		E_NO_ACTIVE_BPAY = 9;
		E_FAILED_RISK = 10;
		E_CANCELED = 11;
		E_WAIT_MOP = 12;
		E_WAIT_CLIENT_CONFIRM = 13;
		E_WAIT_CLIENT_RISK = 14;
		E_PRODUCT_NA = 15;
		E_RISK_TIMEOUT = 16;
		E_PRODUCT_ALREADY_OWNED = 17;
		E_WAIT_THIRD_PARTY_RECEIPT = 18;
		E_PRODUCT_EVENT_HAS_ENDED = 19;
		E_BP_GENERIC_FAIL = 100;
		E_BP_INVALID_CC_EXPIRY = 101;
		E_BP_RISK_ERROR = 102;
		E_BP_NO_VALID_PAYMENT = 103;
		E_BP_PAYMENT_AUTH = 104;
		E_BP_PROVIDER_DENIED = 105;
		E_BP_PURCHASE_BAN = 106;
		E_BP_SPENDING_LIMIT = 107;
		E_BP_PARENTAL_CONTROL = 108;
		E_BP_THROTTLED = 109;
		E_BP_THIRD_PARTY_BAD_RECEIPT = 110;
		E_BP_THIRD_PARTY_RECEIPT_USED = 111;
		E_BP_PRODUCT_UNIQUENESS_VIOLATED = 112;
		E_BP_REGION_IS_DOWN = 113;
	}
	optional .PegasusUtil.PurchaseError.Error error = 1 [default = E_UNKNOWN];
	optional string purchase_in_progress = 2;
	optional string error_code = 3;
}

message BattlePayStatusResponse {
	enum PacketID {
		ID = 265;
	}
	enum PurchaseState {
		PS_READY = 0;
		PS_CHECK_RESULTS = 1;
		PS_ERROR = 2;
	}
	optional .PegasusUtil.BattlePayStatusResponse.PurchaseState status = 1;
	optional string product_id = 2;
	optional .PegasusUtil.PurchaseError purchase_error = 3;
	optional bool battle_pay_available = 4;
	optional int64 transaction_id = 5;
	optional string third_party_id = 6;
	optional int32 currency = 7;
	optional .PegasusShared.BattlePayProvider provider = 8 [default = BP_PROVIDER_BLIZZARD];
}

message PurchaseMethod {
	enum PacketID {
		ID = 272;
	}
	optional string product_id = 1;
	optional int32 quantity = 2;
	optional int32 currency = 3;
	optional string wallet_name = 4;
	optional bool use_ebalance = 5;
	optional .PegasusUtil.PurchaseError error = 6;
	optional int64 transaction_id = 7;
	optional bool is_zero_cost_license = 8;
}

message PurchaseResponse {
	enum PacketID {
		ID = 256;
	}
	optional .PegasusUtil.PurchaseError error = 1;
	optional int64 transaction_id = 2;
	optional string product_id = 3;
	optional string third_party_id = 4;
	optional int32 currency = 5;
	optional bool is_zero_cost_license = 6;
}

message PurchaseWithGold {
	enum PacketID {
		ID = 279;
		System = 0;
	}
	optional int32 quantity = 1;
	optional int32 product = 2;
	optional int32 data = 3;
}

message PurchaseWithGoldResponse {
	enum PacketID {
		ID = 280;
	}
	enum PurchaseResult {
		PR_SUCCESS = 1;
		PR_INSUFFICIENT_FUNDS = 2;
		PR_PRODUCT_NA = 3;
		PR_FEATURE_NA = 4;
		PR_INVALID_QUANTITY = 5;
	}
	optional .PegasusUtil.PurchaseWithGoldResponse.PurchaseResult result = 1 [default = PR_SUCCESS];
	optional int64 gold_used = 2;
}

message RenameDeck {
	enum PacketID {
		ID = 211;
		System = 0;
	}
	optional int64 deck = 1;
	optional string name = 2;
}

message RewardProgress {
	enum PacketID {
		ID = 271;
	}
	optional .PegasusShared.Date season_end = 1;
	optional int32 wins_per_gold = 2;
	optional int32 gold_per_reward = 3;
	optional int32 max_gold_per_day = 4;
	optional int32 season_number = 5;
	optional int32 pack_id = 8;
	optional int32 xp_solo_limit = 9;
	optional int32 max_hero_level = 10;
	optional .PegasusShared.Date next_quest_cancel = 11;
	optional float event_timing_mod = 12;
}

message SetAdventureOptions {
	enum PacketID {
		ID = 310;
		System = 0;
	}
	optional .PegasusUtil.AdventureOptions adventure_options = 1;
}

message SetCardBack {
	enum PacketID {
		ID = 291;
		System = 0;
	}
	optional int32 card_back = 1;
	optional int64 deck_id = 2;
}

message SetCardBackResponse {
	enum PacketID {
		ID = 292;
	}
	optional bool success = 1;
	optional int32 card_back = 2;
	optional int64 deck_id = 3;
}

message SetOptions {
	enum PacketID {
		ID = 239;
		System = 0;
	}
	repeated .PegasusUtil.ClientOption options = 1;
}

message SetProgress {
	enum PacketID {
		ID = 230;
		System = 0;
	}
	optional int64 value = 1;
}

message SetProgressResponse {
	enum PacketID {
		ID = 296;
	}
	enum Result {
		SUCCESS = 1;
		FAILED = 2;
		ALREADY_DONE = 3;
	}
	optional .PegasusUtil.SetProgressResponse.Result result = 1 [default = SUCCESS];
	optional int64 progress = 2;
}

message SpecialEventTiming {
	optional string event = 1;
	optional uint64 start = 2;
	optional uint64 end = 3;
}

message MassiveLoginReply {
	enum PacketID {
		ID = 300;
	}
	optional .PegasusUtil.ProfileProgress profile_progress = 1;
	optional .PegasusUtil.MedalInfo medal_info = 2;
	optional .PegasusUtil.DeckList deck_list = 3;
	optional .PegasusUtil.ProfileDeckLimit profile_deck_limit = 4;
	optional .PegasusUtil.GoldBalance gold_balance = 5;
	optional .PegasusUtil.ArcaneDustBalance arcane_dust_balance = 6;
	optional .PegasusUtil.RewardProgress reward_progress = 7;
	optional .PegasusUtil.PlayerRecords player_records = 8;
	optional .PegasusUtil.CardBacks card_backs = 9;
	repeated .PegasusUtil.SpecialEventTiming special_event_timing = 10;
}

message Subscribe {
	enum PacketID {
		ID = 314;
	}
}

message SubscribeResponse {
	enum Features {
		F_SYSTEM_0 = 1;
		F_SYSTEM_1 = 2;
	}
	enum PacketID {
		ID = 315;
	}
	optional uint64 route = 1;
	optional uint64 supported_features = 2;
	optional uint64 keep_alive_secs = 3;
}

message ThirdPartyPurchaseStatusResponse {
	enum PacketID {
		ID = 295;
	}
	enum Status {
		NOT_FOUND = 1;
		SUCCEEDED = 2;
		FAILED = 3;
		IN_PROGRESS = 4;
	}
	optional string third_party_id = 1;
	optional .PegasusUtil.ThirdPartyPurchaseStatusResponse.Status status = 2 [default = NOT_FOUND];
}

message ThirdPartyReceiptData {
	optional string third_party_id = 1;
	optional string receipt = 2;
	optional string third_party_user_id = 3;
}

message StartThirdPartyPurchase {
	enum PacketID {
		ID = 312;
		System = 1;
	}
	optional .PegasusShared.BattlePayProvider provider = 1 [default = BP_PROVIDER_BLIZZARD];
	optional string product_id = 2;
	optional int32 quantity = 3;
	optional .PegasusUtil.ThirdPartyReceiptData dangling_receipt_data = 4;
}

message SubmitThirdPartyReceipt {
	enum PacketID {
		ID = 293;
		System = 1;
	}
	optional .PegasusUtil.ThirdPartyReceiptData receipt_data = 1;
	optional int64 transaction_id = 2;
}

message TriggerEventResponse {
	enum PacketID {
		ID = 299;
	}
	optional int32 event_id = 1;
	optional bool success = 2;
}

message TriggerLaunchDayEvent {
	enum PacketID {
		ID = 298;
		System = 0;
	}
	optional .PegasusUtil.NearbyPlayer last_played = 1;
	optional .PegasusUtil.NearbyPlayer other_player = 2;
}

message UpdateLogin {
	enum PacketID {
		ID = 205;
		System = 0;
	}
	optional bool reply_required = 1;
}

message UpdateLoginComplete {
	enum PacketID {
		ID = 307;
	}
}

message UtilAuth {
	enum PacketID {
		ID = 204;
	}
	enum Result {
		UNKNOWN = 0;
		ALLOWED = 1;
		INVALID = 2;
		NO_SERVER = 3;
	}
	optional .PegasusUtil.UtilAuth.Result result = 1;
}

message UtilHandshake {
	enum PacketID {
		ID = 203;
	}
	optional int32 client_handle = 1;
	optional int32 password = 2;
}

message ValidateAchieve {
	enum PacketID {
		ID = 284;
		System = 0;
	}
	optional int32 achieve = 1;
}

message ValidateAchieveResponse {
	enum PacketID {
		ID = 285;
	}
	optional int32 achieve = 1;
}

